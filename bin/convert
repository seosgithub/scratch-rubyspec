#!/usr/bin/env ruby

file_name = ARGV[0]
if file_name.nil?
  puts "Please pass a ruby spec file path like language/and_spec.rb"
  exit
end
path = file_name.split("/")[0]
file = file_name.split("/")[1]

Dir.chdir(File.dirname(__FILE__))
Dir.chdir("../rubyspec/#{path}/")

and_spec = File.read(file)
regex = /it "(.*?)" do(?:\s*(.*?))end/m

outfile = ""

and_spec.scan(regex).each do |groups|
  #Capture results (Right side of should)
  results = groups[1].scan(/\s*(.*)\.should\s*(.*)/)
  results = results.map{|e| e[1]}
  #$stderr.puts results.inspect

  groups[1].gsub!(/\s*(.*)\.should.*/, "\n" 'puts \1.inspect')
  
  #if should_matches[1]
    #require 'pry'; binding.pry
  #end
  
  
  outfile << "check '#{groups[0]}' do\n"
    outfile << "\tcode = %{\n"
      groups[1].gsub! /^\s*/, ""
      groups[1].gsub! /\n/, "\n\t"
      groups[1].gsub! /\n\t$/, ""
      groups[1] = "\t" + groups[1]
      groups[1].gsub! /\t/, "\t\t"
      outfile << groups[1]
    outfile << "\n\t}\n"
    outfile << "\tresults = #{results}\n"
    outfile << "\n\t{:code => code, :results => results}\n"
  outfile << "end\n\n"

  #<Tabs to spaces
  outfile.gsub! /\t/, "  "
end

require 'fileutils'
Dir.chdir("../../")
FileUtils::mkdir_p("tmp")
File.open "tmp/#{file_name.gsub("/", "_")}", "w+" do |file|
  file << outfile
end
